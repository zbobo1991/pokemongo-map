message InventoryResponse {
  required bool success = 1;
  required InventoryDelta inventory_delta = 2;

  message InventoryDelta {
  	optional int64 original_timestamp_ms = 1;
  	optional int64 new_timestamp_ms = 2;
  	repeated InventoryItem inventory_items = 3;

    message InventoryItem {
    	optional int64 modified_timestamp_ms = 1;
    	optional int64 deleted_item_key = 2;
    	optional InventoryItemData inventory_item_data = 3;

      message InventoryItemData {
      	optional PokemonData pokemon_data = 1;
        optional Item item = 2;
        optional PokedexEntry pokedex_entry = 3;
        optional PlayerStats player_stats = 4;
        optional PlayerCurrency player_currency = 5;
        optional PlayerCamera player_camera = 6;
        optional InventoryUpgrades inventory_upgrades = 7;
        optional AppliedItems applied_items = 8;
        optional EggIncubators egg_incubators = 9;
        optional PokemonFamily pokemon_family = 10;

        message PokemonData {
        	optional fixed64 id = 1;
        	optional int32 pokemon_id = 2;
        	optional int32 cp = 3;
        	optional int32 stamina = 4;
        	optional int32 stamina_max = 5;
        	optional int32 move_1 = 6;
        	optional int32 move_2 = 7;
        	optional int32 deployed_fort_id = 8;
        	optional string owner_name = 9;
        	optional bool is_egg = 10;
        	optional double egg_km_walked_target = 11;
        	optional double egg_km_walked_start = 12;
        	optional int32 origin = 14;
        	optional float height_m = 15;
        	optional float weight_kg = 16;
        	optional int32 individual_attack = 17;
        	optional int32 individual_defense = 18;
        	optional int32 individual_stamina = 19;
        	optional float cp_multiplier = 20;
        	optional int32 pokeball = 21;
        	optional uint64 captured_cell_id = 22;
        	optional int32 battles_attacked = 23;
        	optional int32 battles_defended = 24;
        	optional string egg_incubator_id = 25;
        	optional uint64 creation_time_ms = 26;
        	optional int32 num_upgrades = 27;
        	optional float additional_cp_multiplier = 28;
        	optional int32 favorite = 29;
        	optional string nickname = 30;
        	optional int32 from_fort = 31;
        }

        message Item {
        	optional int32 item_id = 1;
        	optional int32 count = 2;
        	optional bool unseen = 3;
        }

        message PokedexEntry {
          optional int32 pokemon_id = 1;
          optional int32 times_encountered = 2;
          optional int32 times_captured = 3;
          optional int32 evolution_stone_pieces = 4;
          optional int32 evolution_stones = 5;
        }

        message PlayerStats {
        	optional int32 level = 1;
        	optional int64 experience = 2;
        	optional int64 prev_level_xp = 3;
        	optional int64 next_level_xp = 4;
        	optional float km_walked = 5;
        	optional int32 pokemons_encountered = 6;
        	optional int32 unique_pokedex_entries = 7;
        	optional int32 pokemons_captured = 8;
        	optional int32 evolutions = 9;
        	optional int32 poke_stop_visits = 10;
        	optional int32 pokeballs_thrown = 11;
        	optional int32 eggs_hatched = 12;
        	optional int32 big_magikarp_caught = 13;
        	optional int32 battle_attack_won = 14;
        	optional int32 battle_attack_total = 15;
        	optional int32 battle_defended_won = 16;
        	optional int32 battle_training_won = 17;
        	optional int32 battle_training_total = 18;
        	optional int32 prestige_raised_total = 19;
        	optional int32 prestige_dropped_total = 20;
        	optional int32 pokemon_deployed = 21;
        	optional bytes pokemon_caught_by_type = 22; // TODO: repeated PokemonType ??
        	optional int32 small_rattata_caught = 23;
        }

        message PlayerCurrency {
          optional int32 gems = 1;
        }

        message PlayerCamera {
        	optional bool is_default_camera = 1;
        }

        message InventoryUpgrades {
        	repeated InventoryUpgrade inventory_upgrades = 1;

          message InventoryUpgrade {
          	optional int32 item_id = 1;
          	optional int32 upgrade_type = 2;
          	optional int32 additional_storage = 3;
          }
        }

        message AppliedItems {
        	repeated AppliedItem item = 4;

          message AppliedItem {
          	optional int32 item_id = 1;
          	optional int32 item_type = 2;
          	optional int64 expire_ms = 3;
          	optional int64 applied_ms = 4;
          }
        }

        message EggIncubators {
        	repeated EggIncubator egg_incubator = 1;

          message EggIncubator {
          	optional string id = 1;
          	optional int32 item_id = 2;
          	optional int32 incubator_type = 3;
          	optional int32 uses_remaining = 4;
          	optional uint64 pokemon_id = 5; // TODO: Check if is PokemonType
          	optional double start_km_walked = 6;
          	optional double target_km_walked = 7;
          }
        }

        message PokemonFamily {
        	optional int32 family_id = 1;
        	optional int32 candy = 2;
        }
      }
    }
  }
}
